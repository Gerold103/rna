bison_parser.y: warning: 1 shift/reduce conflict [-Wconflicts-sr]
lib/sqlhelper.cpp: In function ‘void hsql::inprint(int64_t, uint)’:
lib/sqlhelper.cpp:12:89: warning: format ‘%ld’ expects argument of type ‘long int’, but argument 3 has type ‘int64_t {aka long long int}’ [-Wformat=]
 void inprint(int64_t val, uint num_indent) { printf("%s%ld  \n", indent(num_indent), val); }
                                                                                         ^
lib/sqlhelper.cpp: In function ‘void hsql::inprintU(uint64_t, uint)’:
lib/sqlhelper.cpp:18:89: warning: format ‘%lu’ expects argument of type ‘long unsigned int’, but argument 3 has type ‘uint64_t {aka long long unsigned int}’ [-Wformat=]
 void inprintU(uint64_t val, uint num_indent) { printf("%s%lu\n", indent(num_indent), val); }
                                                                                         ^
lib/Table.cpp: In destructor ‘virtual hsql::TableRef::~TableRef()’:
lib/Table.cpp:6:9: warning: possible problem detected in invocation of delete operator: [-Wdelete-incomplete]
  delete select;
         ^
lib/Table.cpp:6:9: warning: invalid use of incomplete type ‘struct hsql::SelectStatement’
In file included from lib/Table.cpp:1:0:
lib/Table.h:13:8: warning: forward declaration of ‘struct hsql::SelectStatement’
 struct SelectStatement;
        ^
lib/Table.cpp:6:9: note: neither the destructor nor the class-specific operator delete will be called, even if they are declared when the class is defined
  delete select;
         ^
lib/sqlhelper.cpp: In function ‘void hsql::inprint(int64_t, uint)’:
lib/sqlhelper.cpp:12:89: warning: format ‘%ld’ expects argument of type ‘long int’, but argument 3 has type ‘int64_t {aka long long int}’ [-Wformat=]
 void inprint(int64_t val, uint num_indent) { printf("%s%ld  \n", indent(num_indent), val); }
                                                                                         ^
lib/sqlhelper.cpp: In function ‘void hsql::inprintU(uint64_t, uint)’:
lib/sqlhelper.cpp:18:89: warning: format ‘%lu’ expects argument of type ‘long unsigned int’, but argument 3 has type ‘uint64_t {aka long long unsigned int}’ [-Wformat=]
 void inprintU(uint64_t val, uint num_indent) { printf("%s%lu\n", indent(num_indent), val); }
                                                                                         ^
lib/Table.cpp: In destructor ‘virtual hsql::TableRef::~TableRef()’:
lib/Table.cpp:6:9: warning: possible problem detected in invocation of delete operator: [-Wdelete-incomplete]
  delete select;
         ^
lib/Table.cpp:6:9: warning: invalid use of incomplete type ‘struct hsql::SelectStatement’
In file included from lib/Table.cpp:1:0:
lib/Table.h:13:8: warning: forward declaration of ‘struct hsql::SelectStatement’
 struct SelectStatement;
        ^
lib/Table.cpp:6:9: note: neither the destructor nor the class-specific operator delete will be called, even if they are declared when the class is defined
  delete select;
         ^
my_test.cpp: In function ‘int main()’:
my_test.cpp:140:10: warning: enumeration value ‘kStmtError’ not handled in switch [-Wswitch]
    switch(list->statements[i]->type())
          ^
my_test.cpp:140:10: warning: enumeration value ‘kStmtImport’ not handled in switch [-Wswitch]
my_test.cpp:140:10: warning: enumeration value ‘kStmtInsert’ not handled in switch [-Wswitch]
my_test.cpp:140:10: warning: enumeration value ‘kStmtUpdate’ not handled in switch [-Wswitch]
my_test.cpp:140:10: warning: enumeration value ‘kStmtDelete’ not handled in switch [-Wswitch]
my_test.cpp:140:10: warning: enumeration value ‘kStmtCreate’ not handled in switch [-Wswitch]
my_test.cpp:140:10: warning: enumeration value ‘kStmtDrop’ not handled in switch [-Wswitch]
my_test.cpp:140:10: warning: enumeration value ‘kStmtPrepare’ not handled in switch [-Wswitch]
my_test.cpp:140:10: warning: enumeration value ‘kStmtExecute’ not handled in switch [-Wswitch]
my_test.cpp:140:10: warning: enumeration value ‘kStmtExport’ not handled in switch [-Wswitch]
my_test.cpp:140:10: warning: enumeration value ‘kStmtRename’ not handled in switch [-Wswitch]
my_test.cpp:140:10: warning: enumeration value ‘kStmtAlter’ not handled in switch [-Wswitch]
lib/sqlhelper.cpp: In function ‘void hsql::inprint(int64_t, uint)’:
lib/sqlhelper.cpp:12:89: warning: format ‘%ld’ expects argument of type ‘long int’, but argument 3 has type ‘int64_t {aka long long int}’ [-Wformat=]
 void inprint(int64_t val, uint num_indent) { printf("%s%ld  \n", indent(num_indent), val); }
                                                                                         ^
lib/sqlhelper.cpp: In function ‘void hsql::inprintU(uint64_t, uint)’:
lib/sqlhelper.cpp:18:89: warning: format ‘%lu’ expects argument of type ‘long unsigned int’, but argument 3 has type ‘uint64_t {aka long long unsigned int}’ [-Wformat=]
 void inprintU(uint64_t val, uint num_indent) { printf("%s%lu\n", indent(num_indent), val); }
                                                                                         ^
lib/Table.cpp: In destructor ‘virtual hsql::TableRef::~TableRef()’:
lib/Table.cpp:6:9: warning: possible problem detected in invocation of delete operator: [-Wdelete-incomplete]
  delete select;
         ^
lib/Table.cpp:6:9: warning: invalid use of incomplete type ‘struct hsql::SelectStatement’
In file included from lib/Table.cpp:1:0:
lib/Table.h:13:8: warning: forward declaration of ‘struct hsql::SelectStatement’
 struct SelectStatement;
        ^
lib/Table.cpp:6:9: note: neither the destructor nor the class-specific operator delete will be called, even if they are declared when the class is defined
  delete select;
         ^
sql_grammar_test.cpp: In function ‘int main(int, char**)’:
sql_grammar_test.cpp:88:109: warning: format ‘%lu’ expects argument of type ‘long unsigned int’, but argument 2 has type ‘std::vector<std::basic_string<char> >::size_type {aka unsigned int}’ [-Wformat=]
         printf("\033[0;32m{      ok} \033[0mAll %lu grammar tests completed successfully!\n", queries.size());
                                                                                                             ^
sql_grammar_test.cpp:90:139: warning: format ‘%lu’ expects argument of type ‘long unsigned int’, but argument 4 has type ‘std::vector<std::basic_string<char> >::size_type {aka unsigned int}’ [-Wformat=]
         fprintf(stderr, "\033[0;31m{  failed} \033[0mSome grammar tests failed! %d out of %lu tests failed!\n", num_failed, queries.size());
                                                                                                                                           ^
